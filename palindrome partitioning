class Solution {
public:
    bool is_palin(string& str)
    {
        int start=0 , end=str.length()-1;

        while(start<end)
        {
            if(str[start++]!=str[end--])return false;
        }
        return true;
    }
    void solve(int ind,string& s,string curr,vector<string> part,vector<vector<string>>& ans)
    {
        if(ind==s.length())
        {
            if(curr.length()>0 && is_palin(curr))
            {
                part.push_back(curr);
                ans.push_back(part);
            }
            return;
        }
        solve(ind+1,s,curr+s[ind],part,ans);
        
        if(curr.length()>0 && is_palin(curr))
        {
            part.push_back(curr);
            curr=s[ind];
            solve(ind+1,s,curr,part,ans);
            part.pop_back();
        }
    }
    vector<vector<string>> partition(string s) 
    {
        vector<vector<string>>ans;
        vector<string>part;
        string curr="";

        solve(0,s,curr,part,ans);

        return ans;
    }
};
