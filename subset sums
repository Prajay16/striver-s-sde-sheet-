
#include<bits/stdc++.h> 
using namespace std; 
class Solution
{
 private:
 void recursion(int index,vector<int>&res,vector<int>&arr,int sum,int n){
     if(index==n){
         res.push_back(sum);
         return;
     }
     sum+=arr[index];
     recursion(index+1,res,arr,sum,n);
     sum-=arr[index];
     recursion(index+1,res,arr,sum,n);
 }
public:
    vector<int> subsetSums(vector<int> arr, int N)
    {
    vector<int>res;
    recursion(0,res,arr,0,N);
    return res;
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int N;
        cin>>N;
        vector<int> arr(N);
        for(int i = 0 ; i < N ; i++){
            cin >> arr[i];
        }
        Solution ob;
        vector<int> ans = ob.subsetSums(arr,N);
        sort(ans.begin(),ans.end());
        for(auto sum : ans){
            cout<< sum<<" ";
        }
        cout<<endl;
    }
    return 0;
}
